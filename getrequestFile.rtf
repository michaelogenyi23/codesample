{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 const AWS = require('aws-sdk');\
const s3 = new AWS.S3();\
\
const createSlug = (companyName) => \{\
    let slug = companyName.replace(/ /g, '_').toLowerCase().replace(/[^a-z0-9_]/g, '');\
    return slug;\
\}\
\
exports.handler = async (event, context) => \{\
     \
    console.log('event', event);\
    let inputs = JSON.parse(event.body);\
\
    let companySlug = createSlug(inputs.companyName);\
    let user = createSlug(inputs.username);\
\
    let jsonDirectory = `reviewData/$\{companySlug\}/$\{user\}`;\
    let imageDirectory = `reviewPhotos/$\{companySlug\}/$\{user\}`;\
\
    // Retrieve JSON data\
    let jsonParams = \{\
        Bucket: 'lambda-tester-bucket-06-21-23',\
        Key: `$\{jsonDirectory\}/data.json`,\
    \};\
    \
    let jsonData;\
\
    try \{\
        let jsonResponse = await s3.getObject(jsonParams).promise();\
        jsonData = JSON.parse(jsonResponse.Body.toString());\
    \} catch (error) \{\
        console.log('JSON error', error);\
    \}\
\
    // Retrieve the images\
    let images = [];\
    try \{\
        // Assuming that you want to retrieve a known number of images; \
        // a more dynamic approach would involve listing the objects first\
        for (let i = 0; i < 2; i++) \{ // Change 5 to the number of images you expect to retrieve\
            let imageParams = \{\
                Bucket: 'lambda-tester-bucket-06-21-23',\
                Key: `$\{imageDirectory\}/image$\{i + 1\}.png`,\
            \};\
            let imageResponse = await s3.getObject(imageParams).promise();\
            images.push(imageResponse.Body.toString('base64'));\
        \}\
    \} catch (error) \{\
        console.log('Image error', error);\
    \}\
    if (event.httpMethod === 'OPTIONS') \{\
    return \{\
        "headers": \{\
            'Access-Control-Allow-Origin': '*',\
            'Access-Control-Allow-Headers': 'Content-Type',\
            'Access-Control-Allow-Methods': 'GET'\
        \},\
        "statusCode": 200,\
        "body": JSON.stringify(\{\
            data: jsonData,\
            images: images\
        \})\
        \};\
    \}\
\};}